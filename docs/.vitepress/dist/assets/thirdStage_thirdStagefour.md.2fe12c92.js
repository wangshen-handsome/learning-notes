import{_ as s,o as a,c as n,N as l}from"./chunks/framework.e454f055.js";const p="/learning-notes/assets/1-7环境变量win10.4af9844d.png",o="/learning-notes/assets/image-20210318102602330.b936980d.png",e="/learning-notes/assets/image-20210510151510928.73d81e1f.png",t="/learning-notes/assets/2-1ascii.d34d115a.png",c="/learning-notes/assets/image-20220516161427100.169f25af.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"thirdStage/thirdStagefour.md"}'),r={name:"thirdStage/thirdStagefour.md"},y=l(`<h2 id="一、node简介-了解" tabindex="-1">一、Node简介（了解） <a class="header-anchor" href="#一、node简介-了解" aria-label="Permalink to &quot;一、Node简介（了解）&quot;">​</a></h2><p>Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台的JavaScript<strong>运行环境</strong>。</p><p>Node.js 采用 Google 开发的 V8 引擎运行 js 代码，使用<strong>事件驱动</strong>、<strong>非阻塞</strong>和<strong>异步I/O</strong>模型等技术来提高性能，可优化应用程序的传输量和规模。</p><p>Node.js主要用于编写像Web服务器一样的网络应用</p><p>官网地址：<a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">https://nodejs.org/en/</a></p><p>中文官网：<a href="http://nodejs.cn/" target="_blank" rel="noreferrer">http://nodejs.cn/</a></p><h3 id="_1-什么是node-js" tabindex="-1">1. 什么是Node.js <a class="header-anchor" href="#_1-什么是node-js" aria-label="Permalink to &quot;1. 什么是Node.js&quot;">​</a></h3><p>它是一个<strong>环境</strong> 。比如浏览器就是一个环境，它可以解析（html、css、js）</p><p>而Node就是ECMAScript的环境（它对es6支持非常友好）</p><h3 id="_2-为什么学习node-js" tabindex="-1">2. 为什么学习Node.js <a class="header-anchor" href="#_2-为什么学习node-js" aria-label="Permalink to &quot;2. 为什么学习Node.js&quot;">​</a></h3><p>浏览器是前端工程师特有的环境，而node它是后端环境。而后端有哪些语言（php、java、python、C#....）</p><p>也就是说js的脚伸到后端了。比如：java能做的事情我们node也能做。</p><p>前端干不了的事情后端来干（比如我们用node）。因为语法不用学了，已经学完了，降低成本。</p><p>比如前端干不了以下事情 ： 数据库操作、删除文件、动态网站。</p><p>通过学习Node.js<strong>深刻认识前后端交互</strong>，而且后面学习的Vue、React它们环境都依赖Node。</p><h3 id="_3-node-js简史" tabindex="-1">3. Node.js简史 <a class="header-anchor" href="#_3-node-js简史" aria-label="Permalink to &quot;3. Node.js简史&quot;">​</a></h3><p>它是2009年发布-2022年 ，经过这几年发展，Node也已经很成熟了。</p><h3 id="_4-node-js的特点" tabindex="-1">4. Node.js的特点 <a class="header-anchor" href="#_4-node-js的特点" aria-label="Permalink to &quot;4. Node.js的特点&quot;">​</a></h3><ul><li><p>单线程</p><p>PHP、java这些都是多线程 。而node是单线程</p><p><code>什么是多线程？什么是单线程？</code></p></li><li><p>非阻塞I/O</p><p>I/O：是文件读写操作，指令操作。非阻塞：程序顺利往下执行</p></li><li><p>事件驱动</p><p>程序怎么知道该执行了呢？就是由事件驱动（事件触发）</p></li></ul><h3 id="_5-node与javascript之间的区别" tabindex="-1">5. Node与JavaScript之间的区别 <a class="header-anchor" href="#_5-node与javascript之间的区别" aria-label="Permalink to &quot;5. Node与JavaScript之间的区别&quot;">​</a></h3><p>JavaScript：ECMAScript、BOM、DOM</p><p>Node: 没有<strong>DOM和BOM</strong>，另外有自己特有的API： 如文件系统等api</p><h3 id="_6-node的应用领域" tabindex="-1">6. Node的应用领域 <a class="header-anchor" href="#_6-node的应用领域" aria-label="Permalink to &quot;6. Node的应用领域&quot;">​</a></h3><ul><li>API接口</li><li>动态网站开发</li><li>即时通信</li><li>有一些第三方团队会基于Node开发一些前端工具</li></ul><h2 id="二、node安装" tabindex="-1">二、Node安装 <a class="header-anchor" href="#二、node安装" aria-label="Permalink to &quot;二、Node安装&quot;">​</a></h2><h3 id="_1-下载与安装" tabindex="-1">1.下载与安装 <a class="header-anchor" href="#_1-下载与安装" aria-label="Permalink to &quot;1.下载与安装&quot;">​</a></h3><p>下载地址1：<a href="http://nodejs.cn/download/%EF%BC%88V14%E5%8F%AA%E6%94%AF%E6%8C%81win10%E5%8F%8A%E4%BB%A5%E4%B8%8A%EF%BC%89" target="_blank" rel="noreferrer">http://nodejs.cn/download/（V14只支持win10及以上）</a></p><p>下载地址2：<a href="https://npm.taobao.org/mirrors/node/" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/node/</a> v12</p><p>​ <a href="https://npm.taobao.org/mirrors/node/v12.6.0/" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/node/v12.6.0/</a></p><p>​ node-v12.6.0-x64.msi （win 64位）</p><p>​ node-v12.6.0-x86.msi （win 32位）</p><p>​ node-v12.6.0.pkg （苹果）</p><p>安装：一路next，可以换路径，但尽量不要有中文。</p><p>验证node是否安装成功：打开cmd（命令提示符）： win+r-&gt;输入cmd-&gt;回车。输入: node -v</p><h3 id="_2-第一个nodejs程序" tabindex="-1">2. 第一个nodejs程序 <a class="header-anchor" href="#_2-第一个nodejs程序" aria-label="Permalink to &quot;2. 第一个nodejs程序&quot;">​</a></h3><p>​ 1、先创建一个js文件。编写代码</p><p>​ 2、使用node环境运行js文件（先输入node空格，再把文件拖到cmd中，回车，这个小黑窗口就相当于浏览器的控制台）</p><h2 id="三、命令行与cmd" tabindex="-1">三、命令行与cmd <a class="header-anchor" href="#三、命令行与cmd" aria-label="Permalink to &quot;三、命令行与cmd&quot;">​</a></h2><h3 id="cmd和命令介绍" tabindex="-1">cmd和命令介绍 <a class="header-anchor" href="#cmd和命令介绍" aria-label="Permalink to &quot;cmd和命令介绍&quot;">​</a></h3><p><strong>CMD</strong>一般指命令提示符。</p><p><strong>命令</strong>就是一条一条的指令 。当用户发出指令那么计算机就会根据指令完成某些操作。</p><p>为什么还要学习命令？能很好的提升我们的开发效率，降低内存的使用空间。</p><h3 id="打开cmd的方式" tabindex="-1">打开cmd的方式 <a class="header-anchor" href="#打开cmd的方式" aria-label="Permalink to &quot;打开cmd的方式&quot;">​</a></h3><p>第1种：开始-&gt;输入cmd-&gt;回车</p><p>第2种：win+r-&gt;输入cmd-&gt;回车</p><p>第3种：在任意目录下的地址栏输入 cmd -&gt; 回车</p><p>第4种：在任意目录下，按shift+右键，在菜单栏中有 “在此处打开命令窗口”</p><p><strong>重点第三种 和 第四种</strong></p><h3 id="常用命令-了解" tabindex="-1">常用命令（了解） <a class="header-anchor" href="#常用命令-了解" aria-label="Permalink to &quot;常用命令（了解）&quot;">​</a></h3><p>1、切换目录</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">目录名称</span><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">change</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">directory</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">目录</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">..</span><span style="color:#A6ACCD;">         </span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">切换到上级</span></span>
<span class="line"><span style="color:#FFCB6B;">d:</span><span style="color:#A6ACCD;">			  </span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">直接换到D盘</span></span>
<span class="line"></span></code></pre></div><p>2、查看目录下的信息</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dir</span></span>
<span class="line"></span></code></pre></div><p>3、清屏</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cls</span></span>
<span class="line"></span></code></pre></div><p>4、创建目录</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">md</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">目录名称</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">made（生产）</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">directory</span></span>
<span class="line"></span></code></pre></div><p>5、删除目录</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">目录</span><span style="color:#A6ACCD;">      	</span><span style="color:#C3E88D;">:remove</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">directory</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">只能删除空目录</span></span>
<span class="line"></span></code></pre></div><p><a href="https://jingyan.baidu.com/article/6766299796ce9354d41b8443.html" target="_blank" rel="noreferrer">https://jingyan.baidu.com/article/6766299796ce9354d41b8443.html</a></p><p><a href="https://jingyan.baidu.com/article/36d6ed1f0355235bcf4883d4.html" target="_blank" rel="noreferrer">https://jingyan.baidu.com/article/36d6ed1f0355235bcf4883d4.html</a></p><p>cmd命令不是重点，重点是<strong>使用技巧</strong>和cd、cls</p><h3 id="使用技巧-重要" tabindex="-1">使用技巧（重要） <a class="header-anchor" href="#使用技巧-重要" aria-label="Permalink to &quot;使用技巧（重要）&quot;">​</a></h3><p>结合tab键补全文件名。</p><p>↑ ↓ 上下箭头，寻找最近记录</p><p><strong>总结：使用node运行文件，都使用相对路径（相对于打开cmd的相对目录）</strong></p><h2 id="四、环境变量" tabindex="-1">四、环境变量 <a class="header-anchor" href="#四、环境变量" aria-label="Permalink to &quot;四、环境变量&quot;">​</a></h2><h4 id="什么是环境变量" tabindex="-1">什么是环境变量？ <a class="header-anchor" href="#什么是环境变量" aria-label="Permalink to &quot;什么是环境变量？&quot;">​</a></h4><p>cmd打开文件或目录的时候。环境变量能够方便开发者更好的寻找你的一些程序文件</p><p>其实就是将你安装好的程序文件的安装目录地址，加入到<strong>系统环境变量</strong> 或 <strong>用户环境变量中</strong></p><p>当在cmd中输入mspaint（画图） 或 notepad（记事本）的时候，打开对应的画图和记事本，其实就是这两个在环境变量中。</p><h4 id="如何配置环境变量" tabindex="-1">如何配置环境变量？ <a class="header-anchor" href="#如何配置环境变量" aria-label="Permalink to &quot;如何配置环境变量？&quot;">​</a></h4><p>以qq为例，给大家配置环境变量。</p><p>计算机-&gt;右键-&gt;属性-&gt;高级系统设置-&gt;高级-&gt;环境变量-&gt; 就能见到<strong>用户的环境变量和系统的环境变量</strong>。找到变量path（路径）即可修改，用<code>;</code>分隔即可</p><p>win10：</p><p><img src="`+p+'" alt="1-7环境变量win10"></p><p>win7：</p><p><img src="'+o+`" alt="image-20210318102602330"></p><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p>当运行cmd时，出现<code>xxx不是内部或外部命令，也不是可运行的程序</code>时。你要确定有没有安装，要么就是环境变量出了问题。</p><p>而node.js安装成功以后，自动把node的路径安装到了环境变量path中。所以可以直接在任意目录下运行node.exe</p><h2 id="五、文件系统-模块" tabindex="-1">五、文件系统/模块 <a class="header-anchor" href="#五、文件系统-模块" aria-label="Permalink to &quot;五、文件系统/模块&quot;">​</a></h2><p>在Nodejs中可以通过内置的fs模块（功能）来操作系统文件。</p><p>文件系统操作都具有<strong>同步和回调</strong>两种方式。所有node中的90%以上的方法（都有同步和异步两种形式）</p><h3 id="_1-文件的操作流程-了解" tabindex="-1">1. 文件的操作流程(了解) <a class="header-anchor" href="#_1-文件的操作流程-了解" aria-label="Permalink to &quot;1. 文件的操作流程(了解)&quot;">​</a></h3><p><strong>打开文件 -&gt; 对文件进行操作 -&gt; 关闭文件（释放内存）</strong></p><p>这里了解即可，重点是后面简单的操作方法</p><h4 id="_1-打开文件" tabindex="-1">1）打开文件 <a class="header-anchor" href="#_1-打开文件" aria-label="Permalink to &quot;1）打开文件&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">openSync</span><span style="color:#A6ACCD;">(path[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> flags])</span></span>
<span class="line"></span></code></pre></div><p>返回文件引用</p><p>参数说明：</p><p>​ path：必写参数，是要打开的目标文件名的字符串(可以包含文件所在的具体路径)</p><p>​ flags：可选参数，设置打开文件的模式（默认为只读），常用的模式：只读r、写入w、追加a</p><p>打开模式表：</p><table><thead><tr><th>模式</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td><strong>a</strong></td><td style="text-align:left;">文件用于追加。 如果文件不存在，则创建该文件</td></tr><tr><td>ax</td><td style="text-align:left;">类似于a，但如果路径存在，则失败</td></tr><tr><td>a+</td><td style="text-align:left;">打开文件用于读取和追加。 如果文件不存在，则创建该文件</td></tr><tr><td>ax+</td><td style="text-align:left;">类似于 &#39;a+&#39;，但如果路径存在，则失败</td></tr><tr><td>as</td><td style="text-align:left;">打开文件用于追加（在同步模式中）。 如果文件不存在，则创建该文件</td></tr><tr><td>as+</td><td style="text-align:left;">打开文件用于读取和追加（在同步模式中）。 如果文件不存在，则创建该文件</td></tr><tr><td>r+</td><td style="text-align:left;">打开文件用于读取和写入。 如果文件不存在，则会发生异常</td></tr><tr><td>rs+</td><td style="text-align:left;">打开文件用于读取和写入（在同步模式中）。 指示操作系统绕过本地的文件系统缓存</td></tr><tr><td><strong>w</strong></td><td style="text-align:left;">打开文件用于写入。 如果文件不存在则创建文件，如果文件存在则截断文件</td></tr><tr><td>wx</td><td style="text-align:left;">类似于 &#39;w&#39;，但如果路径存在，则失败</td></tr></tbody></table><h4 id="_2-写入内容" tabindex="-1">2）写入内容 <a class="header-anchor" href="#_2-写入内容" aria-label="Permalink to &quot;2）写入内容&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeSync</span><span style="color:#A6ACCD;">( 文件的引用</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 内容 )</span></span>
<span class="line"></span></code></pre></div><h4 id="_3-关闭文件" tabindex="-1">3）关闭文件 <a class="header-anchor" href="#_3-关闭文件" aria-label="Permalink to &quot;3）关闭文件&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">closeSync</span><span style="color:#A6ACCD;">(文件的引用)</span></span>
<span class="line"></span></code></pre></div><p>案例：使用程序往demo下的abc.txt中写入hello</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 必须先引入fs内置模块</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// console.log(fs); // 它是一个对象，它下面有很多操作文件的方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 打开文件 -&gt; 对文件进行操作 -&gt; 关闭文件（释放内存）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1、打开文件：返回文件引用</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.openSync(path[, flags])    常用的模式：只读r(默认)、写入w、追加a</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">openSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2、对文件进行操作</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.writeSync( 文件的引用, 内容 )</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeSync</span><span style="color:#A6ACCD;">(file</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3、关闭文件（释放内存）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.closeSync(文件的引用)</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">closeSync</span><span style="color:#A6ACCD;">(file)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="一些坑" tabindex="-1">一些坑 <a class="header-anchor" href="#一些坑" aria-label="Permalink to &quot;一些坑&quot;">​</a></h3><p>文件名不要叫node.js，文件夹名不要叫node</p><h3 id="_2-进制-了解" tabindex="-1">2. 进制（了解） <a class="header-anchor" href="#_2-进制-了解" aria-label="Permalink to &quot;2. 进制（了解）&quot;">​</a></h3><p>对编程没有帮助，了解即可</p><h4 id="_2-1-常见进制简述" tabindex="-1">2.1 常见进制简述 <a class="header-anchor" href="#_2-1-常见进制简述" aria-label="Permalink to &quot;2.1 常见进制简述&quot;">​</a></h4><p>常见有：二进制、八进制、十进制、十六进制...</p><p>所有数据底层都是二进制（0和1），计算机只认识0和1， 而且文件的数据读写和网络中的数据传输都是以二进制传递的</p><h4 id="_2-2-进制转换原理" tabindex="-1">2.2 进制转换原理 <a class="header-anchor" href="#_2-2-进制转换原理" aria-label="Permalink to &quot;2.2 进制转换原理&quot;">​</a></h4><p>2进制逢2进1，10进制逢10进1</p><p>十进制：143 转 10进制的原理(任何非零数的0次方都是1)</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1*10^2   +  4*10^1    +  3*10^0 =   143</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>二进制：1010 转 十进制的原理</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1*2^3 + 0*2^2  +  1*2^1 + 0*2^0 =  10</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>在线转换器</p><p><a href="https://tool.lu/hexconvert/" target="_blank" rel="noreferrer">https://tool.lu/hexconvert/</a></p><h4 id="_2-3-计算机存储原理" tabindex="-1">2.3 计算机存储原理 <a class="header-anchor" href="#_2-3-计算机存储原理" aria-label="Permalink to &quot;2.3 计算机存储原理&quot;">​</a></h4><p>最小的存储单位是： b（bit） 位，也称为比特</p><p>存储文件的最小单位：B （Byte）字节</p><p>1B = 8b</p><p>b就是0或1，但是它不能表示具体的数据，需要8个一起，才能表示一个具体数据。</p><p><img src="`+e+'" alt="image-20210510151510928"></p><h4 id="_2-4-ascii" tabindex="-1">2.4 ASCII <a class="header-anchor" href="#_2-4-ascii" aria-label="Permalink to &quot;2.4 ASCII&quot;">​</a></h4><p><img src="'+t+`" alt="2-1ascii"></p><p>每一个ascii码值代表了一个具体的字符。<strong>底层都会用二进制数表示具体的字符。</strong></p><p>英文、数字（62个 ） 加上特殊符号（100）大致共 162个，则 <strong>8个二进制位（11111111最大255也就是一个字节足以表示了）</strong></p><p>所以：<strong>英文数字特殊符号，只占一个字节 。</strong></p><p>但是：世界上有很多其他国家其它的语言不够存，所以就有utf-8， utf-8国标码（国际通用的）：utf8 一个字符占3个字节。</p><h3 id="_3-两种编程风格-同步和回调" tabindex="-1">3. 两种编程风格（同步和回调） <a class="header-anchor" href="#_3-两种编程风格-同步和回调" aria-label="Permalink to &quot;3. 两种编程风格（同步和回调）&quot;">​</a></h3><p><code>注意： 4.1 读取文件 完成之后，再来看这里</code></p><p><strong>同步的特点</strong>： 可以用变量接收函数的返回值，node中所有内置函数名都以 <strong>Sync</strong> 结尾</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">( path[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options] )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><strong>回调(异步)的特点</strong>：node中的回调风格的方法，必须传递回调函数，否则报错，然后不以sync结尾</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">( path [</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> callback )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>结果必须用回调函数接收。回调函数的第一个参数是错误对象，第二个参数是读取的数据</p><p>注意：推荐使用同步风格</p><p><strong>以回调读取文件为例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.readFile( path [,options], callback )</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结果必须用回调函数接收。回调函数的第一个参数是错误对象，第二个参数是读取的数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 没有用第二个参数</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// -------------------</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 有第二个参数</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ---------------------</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 读取错误</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc1.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_4-文件操作" tabindex="-1">4. 文件操作 <a class="header-anchor" href="#_4-文件操作" aria-label="Permalink to &quot;4. 文件操作&quot;">​</a></h3><p>关键：学会看手册</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">http://nodejs.cn/api/fs.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="_4-1-读取文件" tabindex="-1">4.1 读取文件 <a class="header-anchor" href="#_4-1-读取文件" aria-label="Permalink to &quot;4.1 读取文件&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">回调风格：fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">( path[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">callback )</span></span>
<span class="line"><span style="color:#A6ACCD;">同步风格：fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">( path[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options] )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>返回文件的内容</p><p>参数说明：</p><p>​ path：必选参数，文件路径</p><p>​ options：可选参数 { encoding:&#39;utf8&#39; } | &#39;utf8&#39;，以utf8编码格式读取内容，中括号代表可选参数</p><p>​ callback：必选参数，回调函数，返回结果和错误捕获</p><p><strong>同步方法</strong></p><p>代码示例1：不加utf8</p><p>返回的值默认是buffer且16进制，这是16进制比2进制短，好显示，需要调toString方法再转成正常的字符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &lt;Buffer 68 65 6c 6c 6f&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// hello</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>代码示例2：加utf8字符串</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// let str = fs.readFileSync(&#39;./demo/abc.txt&#39;, { encoding: &#39;utf-8&#39; });</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h6 id="捕获同步代码的错误" tabindex="-1">捕获同步代码的错误 <a class="header-anchor" href="#捕获同步代码的错误" aria-label="Permalink to &quot;捕获同步代码的错误&quot;">​</a></h6><p>如果同步代码报错，则执行catch，并打印错误信息。如果不报错，则catch不执行，代码继续往下走</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">执行可能有错误的代码</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> (error) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">捕获错误</span><span style="color:#F07178;">，</span><span style="color:#A6ACCD;">代码继续向下执行</span></span>
<span class="line"><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>代码示例：读取不存在的文件，用try...catch捕获错误</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 执行可能报错的代码，如果有错误，执行catch</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc1.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> (error) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// error则为错误对象</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">error</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>返回到3，看异步</p><h4 id="_4-2-写入文件" tabindex="-1">4.2 写入文件 <a class="header-anchor" href="#_4-2-写入文件" aria-label="Permalink to &quot;4.2 写入文件&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFileSync</span><span style="color:#A6ACCD;">( path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">data[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options] )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><p>​ path：必选参数，文件路径</p><p>​ data：文件中写入的数据</p><p>​ options：可选参数，设置以何种方式写入内容，主要有替换和追加</p><p>​ ｛ flag:&#39;a&#39; ｝ a代表追加append，w代表write，默认为w</p><p>w的方式写入（默认的方式）</p><p>1、如果没有文件则创建文件，并写入内容 2、如果有此文件，则覆盖内容（ 默认是以 w 的方式进行写入 ）</p><p>代码示例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.writeFileSync( path,data[,options] )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFileSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/c.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">welcome</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">flag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="_4-3-文件信息" tabindex="-1">4.3 文件信息 <a class="header-anchor" href="#_4-3-文件信息" aria-label="Permalink to &quot;4.3 文件信息&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> stat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">statSync</span><span style="color:#A6ACCD;">( path )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>返回一个对象，用于描述文件的信息。</p><p>作用：判断文件或文件夹是否存在，如果不存在则报错。还可以判断是文件还是文件夹</p><p>参数说明：</p><p>​ path：必选参数，文件或文件夹的路径地址</p><p>其他：</p><p>​ 判断文件：stat.isFile()</p><p>​ 判断目录：stat.isDirectory()</p><p>代码示例：</p><p>返回的值里面，还有文件大小。创建时间、修改时间、最近访问时间等信息</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// let stat = fs.statSync( path )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> stat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">statSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/c.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// console.log(stat); // 一个对象，文件的信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(stat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isFile</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 是否是文件</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(stat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDirectory</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 是否是文件夹</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="_4-4-修改文件名称" tabindex="-1">4.4 修改文件名称 <a class="header-anchor" href="#_4-4-修改文件名称" aria-label="Permalink to &quot;4.4 修改文件名称&quot;">​</a></h4><p>语法：同时也是剪切功能（如果路径不一样，就是剪切，如果路径一样，就是重命名）</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">renameSync</span><span style="color:#A6ACCD;">( oldpath</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> newpath )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><p>​ oldpath：必选参数，原文件|文件夹路径</p><p>​ newpath：必选参数，新文件|文件夹路径</p><p>代码示例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.renameSync( oldpath, newpath )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1、改名</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">renameSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/tianzhu.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2、移动文件</span></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">renameSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo/tianzhu.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo2/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="_4-5-删除文件" tabindex="-1">4.5 删除文件 <a class="header-anchor" href="#_4-5-删除文件" aria-label="Permalink to &quot;4.5 删除文件&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unlinkSync</span><span style="color:#A6ACCD;">( filepath )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><p>​ filepath：必选参数，要删除的文件路径（注意，是文件不是文件夹）</p><p>代码示例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 删除文件，不能删除文件夹</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.unlinkSync( filepath )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unlinkSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo2/abc.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_5-文件夹操作" tabindex="-1">5. 文件夹操作 <a class="header-anchor" href="#_5-文件夹操作" aria-label="Permalink to &quot;5. 文件夹操作&quot;">​</a></h3><h4 id="_5-1创建目录" tabindex="-1">5.1创建目录 <a class="header-anchor" href="#_5-1创建目录" aria-label="Permalink to &quot;5.1创建目录&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mkdirSync</span><span style="color:#A6ACCD;">( path[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options] )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><p>​ path：必选参数，要创建的文件夹完整路径名称</p><p>​ options：可选参数：是否递归创建文件夹</p><p>​ { recursive: true/false } true代表递归创建 （demo/bb/cc/dd）</p><p>代码案例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.mkdirSync( path[,options] )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.mkdirSync(&#39;./demo3&#39;); // 创建一层</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mkdirSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo3/a/b/c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 递归创建</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="_5-2删除目录" tabindex="-1">5.2删除目录 <a class="header-anchor" href="#_5-2删除目录" aria-label="Permalink to &quot;5.2删除目录&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rmdirSync</span><span style="color:#A6ACCD;">( path[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">options] )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><p>​ path：必选参数，要删除的文件夹完整路径</p><p>​ options：可选参数，是否递归删除文件夹，{ recursive:true } true代表递归删除，只有V14版本支持递归删除</p><p>代码案例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.rmdirSync( path[,options] )</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.rmdirSync(&#39;./demo2&#39;); // 删除一个空的文件夹</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rmdirSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">recursive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 递归删除，node的14以上版本支持</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="_5-3读取目录" tabindex="-1">5.3读取目录 <a class="header-anchor" href="#_5-3读取目录" aria-label="Permalink to &quot;5.3读取目录&quot;">​</a></h4><p>语法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readdirSync</span><span style="color:#A6ACCD;">(path)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><p>​ path：必选参数，要读取的文件夹的完整路径</p><p>返回一个一维数组。且只能读取一层目录，要读取目录下所有的文件，需要递归</p><p>代码案例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs.readdirSync(path)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 返回一个一维数组。且只能读取一层目录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> files </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readdirSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./demo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(files)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ &#39;a&#39;, &#39;aa.js&#39;, &#39;b&#39;, &#39;c.txt&#39; ]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_6-其他" tabindex="-1">6. 其他 <a class="header-anchor" href="#_6-其他" aria-label="Permalink to &quot;6.  其他&quot;">​</a></h3><h4 id="_6-1-全局变量" tabindex="-1">6.1 全局变量 <a class="header-anchor" href="#_6-1-全局变量" aria-label="Permalink to &quot;6.1 全局变量&quot;">​</a></h4><p>在浏览器 JavaScript 中，通常 window是顶层对象，而 Node.js 中的顶层对象是 global</p><p>Node平台内置了例如：<code>__filename</code> 和 <code>__dirname</code>等全局变量 setInterval() setTimeout()等方法</p><p>代码示例：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">__dirname：当前文件所在的绝对地址目录</span></span>
<span class="line"><span style="color:#A6ACCD;">__filename：当前文件所在的绝对地址目录（包含文件名称）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="_6-2-优化路径" tabindex="-1">6.2 优化路径 <a class="header-anchor" href="#_6-2-优化路径" aria-label="Permalink to &quot;6.2 优化路径&quot;">​</a></h4><p><img src="`+c+`" alt="image-20220516161427100"></p><p>fs操作的文件，如果使用<strong>相对路径</strong>（是相对于命令行的路径）</p><p>解决：避免在使用fs操作文件的时候，用相对路径。所以以后在使用fs的时候都要改成绝对地址。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fs操作的文件，如果使用相对路径（是相对于命令行的路径）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// let str = fs.readFileSync(&#39;./demo/c.txt&#39;, &#39;utf-8&#39;);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// console.log(str);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// --------------------</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 解决：使用绝对路径</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> __dirname </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">demo</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">c.txt</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 拼出一个绝对的地址</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#A6ACCD;">(path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,241),i=[y];function D(F,A,C,d,h,g){return a(),n("div",null,i)}const m=s(r,[["render",D]]);export{f as __pageData,m as default};
